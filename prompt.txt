gm gpt, i want to work on an app translation, i believe it is currently using raw transform, i want to move to using react-intl and update each page accoriding


you will be my virtual assistant on this page and there are a few things you need to take note of

- when i give you a code, you analyze it and do exactly as i said to do, example; modify or update to be modular
- you are to keep in mind the code is react, need to be reusable and modular, so if you notice something that is not and can be updated quiclly include it in the edit and explain it
- when i ask you something, don't assume, ask for clarifications with your suggestions or recommendation before proceeding to edit
- focus on giving the full code or at least most detailed on where to update and what needs to be available and where, example providing an updated js without notifying about need for css file class, 
- focus on tailwind classes than regular css, and wherever you see instance of regular classes, try to port to tailwind aslong as you iudnerstand the context
- all in all keep the clean, modular and clear design concept in mind, and when you notice something about the poor ux, suggest how to improve it
- we focus on the first version for now so not all need to be done here, nbut the most important


so support for both french and english

i will be using locales folder and for translateion nested obnject, i have a function to flatten message


import { useLanguage } from "../context/LanguageProvider";
import { FormattedMessage } from "react-intl";

const LanguageSwitcher = () => {
  const { locale, changeLanguage } = useLanguage();

  const handleLanguageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    changeLanguage(e.target.value);
  };

  return (
    <select
      value={locale}
      onChange={handleLanguageChange}
      className="bg-white/10 backdrop-blur-md border border-white/20 rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500"
    >
      <option value="en" className="text-gray-900">
        ğŸ‡ºğŸ‡¸ <FormattedMessage id="home.english" defaultMessage="English" />
      </option>
      <option value="fr" className="text-gray-900">
        ğŸ‡«ğŸ‡· <FormattedMessage id="home.french" defaultMessage="French" />
      </option>
    </select>
  );
};

export default LanguageSwitcher;
